name: Release

on:
  workflow_dispatch:
  push:
    branches: 
      - release

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: "amd64"
            rid: "linux-musl-x64"
          - arch: "aarch64"
            rid: "linux-musl-arm64"
          - arch: "armv7"
            rid: "linux-musl-arm"
    runs-on: ubuntu-latest
    permissions: 
      packages: write
    steps:
    - name: checkout
      uses: actions/checkout@v5
    - name: setup
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: build_release
      run: |
        cd src
        dotnet publish -r ${{ matrix.rid }} --configuration Release --self-contained -o build/
    - uses: actions/upload-artifact@v4
      with:
        name: ha-fca-${{ matrix.arch }}
        path: ./src/build/**
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: List and download artifacts via GitHub API
        run: |
          ARTIFACTS_JSON=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")
          
          echo "$ARTIFACTS_JSON" | jq -r '.artifacts[] | "\(.name) \(.id) \(.archive_download_url)"' | while read name id url; do
            echo "Downloading artifact: $name (ID: $id)"
            curl -L \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -o "$name.zip" \
              "$url"
          done
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install -D semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog
      
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}